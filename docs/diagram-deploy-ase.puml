@startuml deployment-option2

!define AzurePuml https://raw.githubusercontent.com/RicardoNiepel/Azure-PlantUML/release/2-1/dist
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Container.puml
!includeurl AzurePuml/AzureCommon.puml
!includeurl AzurePuml/Identity/AzureActiveDirectory.puml
' !includeurl AzurePuml/Security/AzureKeyVault.puml
' !includeurl AzurePuml/Networking/AzureTrafficManager.puml
!includeurl AzurePuml/Web/AzureAPIManagement.puml
!includeurl AzurePuml/Networking/AzureApplicationGateway.puml
!includeurl AzurePuml/Compute/AzureAppService.puml
!includeurl AzurePuml/Compute/AzureFunction.puml
!includeurl AzurePuml/Databases/AzureCosmosDb.puml
!includeurl AzurePuml/Analytics/AzureEventHub.puml
!includeurl AzurePuml/Databases/AzureSqlDatabase.puml
!includeurl AzurePuml/DevOps/AzureApplicationInsights.puml
!includeurl AzurePuml/DevOps/AzurePipelines.puml
!includeurl AzurePuml/Management/AzurePolicy.puml
!includeurl AzurePuml/Networking/AzureVirtualNetwork.puml
!includeurl AzurePuml/Networking/AzureVPNGateway.puml

LAYOUT_LEFT_RIGHT

title Reference Design Option 2: App Service Environment

skinparam Rectangle {
    BorderColor<<virtualNetwork>> Green
    BackgroundColor<<virtualNetwork>> White
    BorderColor<<subnet>> Green
    ' BorderColor<<networkAcls>> Blue
    BackgroundColor<<subnet>> #CCFFB3
    BorderColor<<azurePolicy>> Green
    BorderColor<<networkAcl>> Green
    BackgroundColor<<networkAcl>> White
    BackgroundColor<<computePool>> White
}

Rectangle "Control Fabric\n<color:green><$AzureVirtualNetwork>\n" as privateNetwork <<virtualNetwork>> {

    Rectangle "api-gateway" <<subnet>> {
        AzureAPIManagement(apim, "apim01", "Premium (99.9% SLA) > 4000 req / sec", "<color:#ae0001>Mandatory API policy checks")
    }

    Rectangle "microservices" <<subnet>> {
        Rectangle "App Service Environment\n<$AzureAppService>" as computePool <<computePool>> {
            AzureFunction(func1, "Profile", "Function App")
            AzureFunction(func2, "Notifications", "Function App")
            rectangle "<b>Data authorization</b>\n<color:#ae0001><$AzureFunction>\n<i>[Function App]</i>\n<color:#ae0001>User consent and data access policies" as func3 <<AzureFunction>>
        }

    }

}

AzureEventHub(eventhub, "Notifications", "", "")
rectangle "<b>Event Hub Firewall</b>\n<color:green><$AzureVPNGateway>\nInbound from <b>appsvc</b> only" as eventhubfw <<networkAcl>>

Person(internetUser, "Internet client")


AzureActiveDirectory(aad, "OAuth", "API registrations and scope assignments")

AzureApplicationInsights(appInsights, "Telemetry and logging", "Alerts")
AzurePipelines(pipelines, "SDLC components", "Scan for middleware", "Deployment automation")
rectangle "<b>Configuration standards</b>\n<color:green><$AzurePolicy>\nBlock Internet access" <<azurePolicy>> as azpolicy
appInsights -[#FFF]- pipelines
pipelines -[#FFF]- azpolicy

eventhub -- eventhubfw

Rel_Back(eventhubfw, internetUser, "Access blocked")

Rel(func2, eventhub, "submit messages")
' func2 --> eventhub
' note bottom on link #white
'     test note
' end note

Rel(func2, aad, "Managed Identity")
Rel_Back(func2, aad, "Access token")
Rel(apim, func1, "Proxied request\nAPIM client certificate\nAccess token")

apim -[#ae0001]-> func3: "<color:#ae0001><b>Policy check</b>\nAPIM client certificate\nAPIM Access token\nRequest data"
apim <-[#ae0001]- func3: "<color:#ae0001><b>Policy response</b>"

Rel(func2, apim, "Request data\nAccess token")

legend right
    |= |= <size:20>Security Layer |
    |<#green>  | <color:green><size:20>Platform Security Standards |
    |<#blue>  | <color:blue><size:20>Application Design |
    |<#ae0001>  | <color:#ae0001><size:20>Data Authorization Rules |
endlegend

@end